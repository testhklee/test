/* 스터디 / 프로젝트 멤버 */
DROP TABLE SOUP_MEMBER PURGE;

/* 스터디 / 프로젝트 멤버 */
CREATE TABLE SOUP_MEMBER (
	SOUP_NO NUMBER, /* 스터디 / 프로젝트 번호 */
	MEMBER_NO NUMBER NOT NULL, /* 회원 번호 */
	SOUP_MEMBER_GUBUN VARCHAR2(10) NOT NULL, /* 역할 구분 (리더 : L, 팀원 : M */
	SOUP_MEMBER_STATUS VARCHAR2(30) NOT NULL, /* 상태 (소속 : BELONG, 나감 : DROP, 퇴출 : KICK) */
	SOUP_MEMBER_ENTER_DATE DATE /* 들어간 날짜 */
);

ALTER TABLE SOUP_MEMBER
	ADD
		CONSTRAINT UK_SOUP_MEMBER
		UNIQUE (
			SOUP_NO,
			MEMBER_NO
		);

ALTER TABLE SOUP_MEMBER
	ADD
		CONSTRAINT FK_MEMBER_TO_SOUP_MEMBER
		FOREIGN KEY (
			MEMBER_NO
		)
		REFERENCES MEMBER (
			MEMBER_NO
		);

ALTER TABLE SOUP_MEMBER
	ADD
		CONSTRAINT FK_SOUP_TO_SOUP_MEMBER
		FOREIGN KEY (
			SOUP_NO
		)
		REFERENCES SOUP (
			SOUP_NO
		);
		
		
--테스트 데이터 생성		
INSERT INTO SOUP_MEMBER VALUES(21, 32, 'L', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(21, 31, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(21, 30, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(21, 29, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(21, 28, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(21, 27, 'M', 'BELONG', SYSDATE);

INSERT INTO SOUP_MEMBER VALUES(24, 32, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(24, 31, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(24, 30, 'L', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(24, 29, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(24, 28, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(24, 27, 'M', 'BELONG', SYSDATE);

INSERT INTO SOUP_MEMBER VALUES(38, 32, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(38, 31, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(38, 30, 'L', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(38, 29, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(38, 28, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(38, 27, 'M', 'BELONG', SYSDATE);



INSERT INTO SOUP_MEMBER VALUES(, 21, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(, 22, 'M', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(, 23, 'L', 'BELONG', SYSDATE);
INSERT INTO SOUP_MEMBER VALUES(, 24, 'M', 'BELONG', SYSDATE);


update SOUP_MEMBER set SOUP_MEMBER_STATUS='BELONG' where MEMBER_NO=56

SELECT * FROM SOUP_MEMBER;
SELECT MEMBER_NO FROM MEMBER;
SELECT * FROM SOUP;

-- 해당 인원이 참여중인('RECRUIT', 'DONE') 스프 리스트를 참여 순서대로 보여준다.
SELECT SOUP_NO, SOUP_TITLE, SOUP_GUBUN, SOUP_MEMBER_GUBUN
FROM SOUP
INNER JOIN
	(SELECT SOUP_NO, SOUP_MEMBER_ENTER_DATE, SOUP_MEMBER_GUBUN
	FROM SOUP_MEMBER
	WHERE MEMBER_NO = 32
		AND SOUP_MEMBER_STATUS = 'BELONG')
USING(SOUP_NO)
WHERE SOUP_STATUS IN ('RECRUIT', 'DONE')
ORDER BY SOUP_MEMBER_ENTER_DATE ASC

-- 해당 인원이 참여해서 끝난('END') 스프 리스트를 참여 순서대로 보여준다.
SELECT SOUP_NO, SOUP_TITLE, SOUP_GUBUN, SOUP_MEMBER_GUBUN
FROM SOUP
INNER JOIN
	(SELECT SOUP_NO, SOUP_MEMBER_ENTER_DATE, SOUP_MEMBER_GUBUN
	FROM SOUP_MEMBER
	WHERE MEMBER_NO = 32
		AND SOUP_MEMBER_STATUS = 'BELONG')
USING(SOUP_NO)
WHERE SOUP_STATUS IN ('END')
ORDER BY SOUP_MEMBER_ENTER_DATE ASC

-- 해당 스프에 소속된 (BELONG) 인원을 리더를 먼저 보여주고 들어온 순서대로 보여준다. 
SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NAME, MEMBER_FACE, SOUP_MEMBER_GUBUN
FROM SOUP_MEMBER
INNER JOIN MEMBER
USING (MEMBER_NO)
WHERE SOUP_NO  = #{soup_no}
AND SOUP_MEMBER_STATUS = 'BELONG'
ORDER BY SOUP_NO, SOUP_MEMBER_GUBUN ASC, SOUP_MEMBER_ENTER_DATE ASC





		


