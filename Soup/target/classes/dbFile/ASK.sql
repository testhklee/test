문의 질문
질문 글 번호	PK
질문 한 회원 번호	FK
질문 제목		NN
질문 내용		NN
질문 분류		NN
질문 작성일	NN
답변여부		CHECK(Y,N)

DROP TABLE QUESTION

CREATE SEQUENCE QUESTION_SEQ

CREATE TABLE QUESTION(
QUESTION_NO NUMBER NOT NULL,				/*문의글번호*/
MEMBER_NO NUMBER NOT NULL,					/*질문한 회원 번호*/			
QUESTION_TITLE VARCHAR2(500) NOT NULL,		/*질문 제목*/
QUESTION_CONTENT VARCHAR2(2000) NOT NULL,	/*질문 내용*/
QUESTION_GUBUN VARCHAR2(50),				/*질분 분류*/
QUESTION_DATE DATE NOT NULL,				/*질문 작성일*/
QUESTION_YN VARCHAR2(2) NOT NULL			/*답변 여부*/
);

SELECT * FROM QUESTION


		SELECT * 
		FROM(
		SELECT ROWNUM AS RN, A.* 
		FROM(
		SELECT MESSAGE_NO, MESSAGE_SENDER_NO, MESSAGE_TARGET_NO, MESSAGE_CONTENT, MESSAGE_DATE,
			   MESSAGE_CHECKED, MESSAGE_SEND_DEL, MESSAGE_TARGET_DEL, MEMBER_NAME
		  FROM MESSAGE 
		 INNER JOIN MEMBER 
		 	ON MESSAGE_TARGET_NO = MEMBER_NO
		 WHERE MESSAGE_SENDER_NO = 25
		   AND MESSAGE_SEND_DEL = 'N'
	  ORDER BY MESSAGE_DATE DESC) A ) 
	  WHERE RN BETWEEN 1 AND 9

	  	SELECT * 
		FROM(
		SELECT ROWNUM AS RN, A.* 
		FROM(
 		SELECT * 
 		FROM QUESTION 
 		WHERE MEMBER_NO = 28
 		ORDER BY QUESTION_YN DESC,QUESTION_DATE) A ) 
		WHERE RN BETWEEN 1 AND 9
		
SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO) WHERE QUESTION_NO = 46

INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,28,'아이유 질문 제목','아이유 질문 답변','ETC',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,28,'아이유 질문 제목','아이유 질문 답변','ETC',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,28,'아이유 질문 제목','아이유 질문 답변','ETC',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,28,'아이유 질문 제목','아이유 질문 답변','ETC',SYSDATE,'N');

INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,29,'박보영 질문 제목','박보영 질문 답변','etc',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,29,'박보영 질문 제목','박보영 질문 답변','etc',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,29,'박보영 질문 제목','박보영 질문 답변','study',SYSDATE,'N');
INSERT INTO QUESTION VALUES(QUESTION_SEQ.NEXTVAL,29,'박보영 질문 제목','박보영 질문 답변','study',SYSDATE,'N');


SELECT * FROM ANSWER JOIN QUESTION USING(QUESTION_NO) WHERE QUESTION_NO =16
SELECT * FROM QUESTION WHERE MEMBER_NO = 28
SELECT * FROM ANSWER JOIN QUESTION USING(QUESTION_NO) JOIN MEMBER USING(MEMBER_NO) WHERE QUESTION_NO = 10
SELECT * FROM ANSWER JOIN QUESTION USING(QUESTION_NO) JOIN MEMBER USING(MEMBER_NO) WHERE QUESTION_NO = #{questionNo}
SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO) WHERE QUESTION_NO = #{questionNo}

SELECT * FROM ANSWER JOIN QUESTION USING(QUESTION_NO) WHERE QUESTION_NO=10

SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO) WHERE QUESTION_NO = 10

SELECT * FROM QUESTION WHERE QUESTION_NO=21

ALTER TABLE QUESTION
ADD
CONSTRAINT PK_QUESTION
PRIMARY KEY(
QUESTION_NO
);

ALTER TABLE QUESTION
ADD
CONSTRAINT FK_MEMBER_TO_QUESTION
FOREIGN KEY(
MEMBER_NO
)
REFERENCES MEMBER(
MEMBER_NO
);

ALTER TABLE QUESTION
ADD
CONSTRAINT CHECK_QUESTION_YN
CHECK(
QUESTION_YN IN ('Y', 'N')
);



	문의 답변
답변 글 번호	PK
질문 글 번호	FK
답변 내용		NN
답변 작성일	NN

CREATE SEQUENCE ANSWER_SEQ;
DROP SEQUENCE ANSWER_SEQ;

DROP TABLE ANSWER

SELECT * FROM ANSWER WHERE QUESTION_NO = 21

CREATE TABLE ANSWER(
ANSWER_NO NUMBER NOT NULL,				/*답변글번호*/
QUESTION_NO NUMBER NOT NULL,			/*질문글번호*/
ANSWER_CONTENT VARCHAR(2000) NOT NULL,	/*답변내용*/
ANSWER_DATE DATE NOT NULL				/*답변 작성일*/
);
select * from answer
INSERT INTO ANSWER values(ANSWER_SEQ.NEXTVAL,5,'아이유 질문답변',SYSDATE)
INSERT INTO ANSWER values(ANSWER_SEQ.NEXTVAL,6,'아이유 질문답변',SYSDATE)
INSERT INTO ANSWER values(ANSWER_SEQ.NEXTVAL,10,'박보영 질문답변',SYSDATE)

SELECT QUESTION_NO FROM ANSWER;

SELECT B.ANSWER_NO,A.QUESTION_NO,B.ANSWER_CONTENT,A.MEMBER_NO 
FROM QUESTION AS A inner join ANSWER AS B ON A.QUESTION_NO = B.QUESTION_NO

SELECT ANSWER_NO,QUESTION_NO,MEMBER_NO
FROM QUESTION JOIN ANSWER USING(QUESTION_NO) WHERE QUESTION_NO =45

SELECT MEMBER_NO FROM ANSWER JOIN QUESTION USING(QUESTION_NO) WHERE QUESTION_NO=45
	


ALTER TABLE ANSWER
ADD
CONSTRAINT PK_ANSWER
PRIMARY KEY(
ANSWER_NO
);

ALTER TABLE ANSWER
ADD
CONSTRAINT FK_QUESTION_TO_ANSWER
FOREIGN KEY(
QUESTION_NO
)
REFERENCES QUESTION(
QUESTION_NO
);

SELECT Q.*,M.MEMBER_NAME
FROM QUESTION AS,Q MEMBER AS M
WHERE Q.MEMBER_NO = (
SELECT MEMBER_NAME 
FROM MEMBER 
WHERE MEMBER_NO=28
)
SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO);
SELECT * FROM QUESTION WHERE MEMBER_NO = 28
SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO);
SELECT * FROM QUESTION JOIN MEMBER USING(MEMBER_NO) WHERE MEMBER_NO=28





